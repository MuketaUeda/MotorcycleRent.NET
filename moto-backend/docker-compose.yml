services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: moto-postgres
    environment:
      POSTGRES_DB: moto_db
      POSTGRES_USER: moto_user
      POSTGRES_PASSWORD: moto_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - moto-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moto_user -d moto_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: moto-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: moto_user
      RABBITMQ_DEFAULT_PASS: moto_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - moto-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  moto-api:
    build:
      context: ./src
      dockerfile: Moto.Api/Dockerfile
    container_name: moto-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=moto_db;Username=moto_user;Password=moto_password
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=moto_user
      - RabbitMQ__Password=moto_password
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - moto-network
    restart: unless-stopped

  # Worker Service
  moto-worker:
    build:
      context: ./src
      dockerfile: Moto.Worker/Dockerfile
    container_name: moto-worker
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=moto_db;Username=moto_user;Password=moto_password
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=moto_user
      - RabbitMQ__Password=moto_password
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - moto-network
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  moto-network:
    driver: bridge
